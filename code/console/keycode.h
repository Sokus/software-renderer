#ifndef KEYCODE_H
#define KEYCODE_H

typedef enum KeyCode
{
    KC_NULL = 0,
    KC_SOH,
    KC_STX,
    KC_ETX,
    KC_EOT,
    KC_ENQ,
    KC_ACK,
    KC_BELL,
    KC_BACKSPACE,
    KC_TAB,
    KC_LF,
    KC_VT,
    KC_FF,
    KC_CR,
    KC_SO,
    KC_SI,
    KC_DLE,
    KC_DC1,
    KC_DC2,
    KC_DC3,
    KC_DC4,
    KC_NAK,
    KC_SYN,
    KC_ETB,
    KC_CAN,
    KC_EN,
    KC_SUB,
    KC_ESC,
    KC_FS,
    KC_GS,
    KC_RS,
    KC_US,
    KC_SPACE,
    KC_EXCLAM,
    KC_QUOTEDBL,
    KC_HASH,
    KC_DOLLAR,
    KC_PERCENT,
    KC_AMPERSAND,
    KC_QUOTE,
    KC_LEFTPAREN,
    KC_RIGHTPAREN,
    KC_ASTERISK,
    KC_PLUS,
    KC_COMMA,
    KC_MINUS,
    KC_PERIOD,
    KC_SLASH,
    KC_0,
    KC_1,
    KC_2,
    KC_3,
    KC_4,
    KC_5,
    KC_6,
    KC_7,
    KC_8,
    KC_9,
    KC_COLON,
    KC_SEMICOLON,
    KC_LESS,
    KC_EQUALS,
    KC_GREATER,
    KC_QUESTION,
    KC_AT,
    KC_CAP_A,
    KC_CAP_B,
    KC_CAP_C,
    KC_CAP_D,
    KC_CAP_E,
    KC_CAP_F,
    KC_CAP_G,
    KC_CAP_H,
    KC_CAP_I,
    KC_CAP_J,
    KC_CAP_K,
    KC_CAP_L,
    KC_CAP_M,
    KC_CAP_N,
    KC_CAP_O,
    KC_CAP_P,
    KC_CAP_Q,
    KC_CAP_R,
    KC_CAP_S,
    KC_CAP_T,
    KC_CAP_U,
    KC_CAP_V,
    KC_CAP_W,
    KC_CAP_X,
    KC_CAP_Y,
    KC_CAP_Z,
    KC_LEFTBRACKET,
    KC_BACKSLASH,
    KC_RIGHTBRACKET,
    KC_CARET,
    KC_UNDERSCORE,
    KC_BACKQUOTE,
    KC_A,
    KC_B,
    KC_C,
    KC_D,
    KC_E,
    KC_F,
    KC_G,
    KC_H,
    KC_I,
    KC_J,
    KC_K,
    KC_L,
    KC_M,
    KC_N,
    KC_O,
    KC_P,
    KC_Q,
    KC_R,
    KC_S,
    KC_T,
    KC_U,
    KC_V,
    KC_W,
    KC_X,
    KC_Y,
    KC_Z,
    KC_LEFTBRACE,
    KC_VERTICALBAR,
    KC_RIGHTBRACE,
    KC_TILDE,
    KC_DEL,
    KC_ASCII_END = 127,

    KC_F1,
    KC_F2,
    KC_F3,
    KC_F4,
    KC_F5,
    KC_F6,
    KC_F7,
    KC_F8,
    KC_F9,
    KC_F10,
    KC_F11,
    KC_F12,
    KC_ARROW_UP,
    KC_ARROW_LEFT,
    KC_ARROW_RIGHT,
    KC_ARROW_DOWN,
    KC_MAX
} KeyCode;



#endif